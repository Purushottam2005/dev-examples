<!--
  JBoss, Home of Professional Open Source
  Copyright 2013, Red Hat, Inc. and individual contributors
  by the @authors tag. See the copyright.txt in the distribution for a
  full listing of individual contributors.

  This is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2.1 of
  the License, or (at your option) any later version.

  This software is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this software; if not, write to the Free
  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<ui:composition template="/layout/template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jsp/jstl/core"
                xmlns:r="http://richfaces.org">
    <ui:param name="title" value="Editor" />


<!-- content -->
<ui:define name="content">

            
    <h:form id="form">
    <r:status onstop="console.log('onstop')" />
        <h:panelGrid columns="2">
            
            <r:editor id="editor" value="#{editor.value}" title="#{editor.title}"
                           readonly="#{editor.readonly}" width="#{editor.width}" height="#{editor.height}"
                           rendered="#{editor.rendered}" toolbar="#{editor.toolbar}" skin="#{editor.skin}"
                           lang="#{editor.lang}"
                           oninit="#{editor.oninit}" onfocus="#{editor.onfocus}" onblur="#{editor.onblur}"
                           onchange="#{editor.onchange}"
                           ondirty="#{editor.ondirty}; document.title = parseInt(document.title) + 1"
                           styleClass="#{editor.styleClass}" style="#{editor.style}"
                           editorClass="#{editor.editorClass}" editorStyle="#{editor.editorStyle}"
                           textareaClass="#{editor.textareaClass}" textareaStyle="#{editor.textareaStyle}">
                           
               <f:facet name="config">#{editor.config}</f:facet>
            </r:editor>
            
            <h:panelGrid columns="3">
                <h:panelGrid columns="1">
                    <r:commandButton value="Re-render @form" process="@form" render="@form"/>
                    <r:commandButton value="Re-render editor" process="@form" render="editor"/>        
                    <h:commandButton value="Submit form"/>
                    <r:commandButton value="AJAX" process="@form" render="output"/>
                </h:panelGrid>
                
                <h:panelGrid columns="1">
                    <h:button type="button" value="setReadOnly(true)"
                           onclick="document.getElementById('form:editor').rf.component.setReadOnly(true); return false;"/>
                    <h:button type="button" value="setReadOnly(false)"
                           onclick="document.getElementById('form:editor').rf.component.setReadOnly(false); return false;"/>
                    <h:button type="button" value="isReadOnly()"
                           onclick="alert(document.getElementById('form:editor').rf.component.isReadOnly()); return false;"/>
                    <h:button type="button" value="setValue('test')"
                           onclick="document.getElementById('form:editor').rf.component.setValue('test'); return false;"/>
                    <h:button type="button" value="getValue()"
                           onclick="alert(document.getElementById('form:editor').rf.component.getValue()); return false;"/>
                    <h:button type="button" value="getEditor()"
                           onclick="alert(document.getElementById('form:editor').rf.component.getEditor()); return false;"/>
                    <h:button type="button" value="getInput()"
                           onclick="alert(document.getElementById('form:editor').rf.component.getInput()); return false;"/>
                    <h:button type="button" value="focus()"
                           onclick="document.getElementById('form:editor').rf.component.focus(); return false;"/>
                    <h:button type="button" value="blur()"
                           onclick="document.getElementById('form:editor').rf.component.blur(); return false;"/>
                    <h:button type="button" value="isFocused()"
                           onclick="alert(document.getElementById('form:editor').rf.component.isFocused()); return false;"/>
                    <h:button type="button" value="isValueChanged()"
                           onclick="alert(document.getElementById('form:editor').rf.component.isValueChanged()); return false;"/>
                    <h:button type="button" value="isDirty()"
                           onclick="alert(document.getElementById('form:editor').rf.component.isDirty()); return false;"/>
               </h:panelGrid>
                
                <h:panelGrid columns="2">
                    <h:outputLabel value="Readonly:"/>
                    <h:inputText value="#{editor.readonly}"/>
        
                    <h:outputLabel value="Width:"/>
                    <h:inputText value="#{editor.width}"/>
        
                    <h:outputLabel value="Height:"/>
                    <h:inputText value="#{editor.height}"/>
        
                    <h:outputLabel value="Rendered:"/>
                    <h:selectBooleanCheckbox value="#{editor.rendered}"/>
        
                    <h:outputLabel value="Lang:"/>
                    <h:inputText value="#{editor.lang}"/>
        
                    <h:outputLabel value="oninit:"/>
                    <h:inputText value="#{editor.oninit}"/>
        
                    <h:outputLabel value="onfocus:"/>
                    <h:inputText value="#{editor.onfocus}"/>
        
                    <h:outputLabel value="onblur:"/>
                    <h:inputText value="#{editor.onblur}"/>
        
                    <h:outputLabel value="onchange:"/>
                    <h:inputText value="#{editor.onchange}"/>
        
                    <h:outputLabel value="ondirty:"/>
                    <h:inputText value="#{editor.ondirty}"/>
        
                    <h:outputLabel value="styleClass:"/>
                    <h:inputText value="#{editor.styleClass}"/>
        
                    <h:outputLabel value="editorClass:"/>
                    <h:inputText value="#{editor.editorClass}"/>
        
                    <h:outputLabel value="textareaClass:"/>
                    <h:inputText value="#{editor.textareaClass}"/>
        
                    <h:outputLabel value="style:"/>
                    <h:inputText value="#{editor.style}"/>
        
                    <h:outputLabel value="editorStyle:"/>
                    <h:inputText value="#{editor.editorStyle}"/>
        
                    <h:outputLabel value="textareaStyle:"/>
                    <h:inputText value="#{editor.textareaStyle}"/>
        
                    <h:outputLabel value="title:"/>
                    <h:inputText value="#{editor.title}"/>
        
                    <h:outputLabel value="Skin:"/>
                    <h:inputText value="#{editor.skin}"/>
        
                    <h:outputLabel value="Toolbar:"/>
                    <h:inputText value="#{editor.toolbar}"/>
                    
                    <h:outputLabel value="config:" />
                    <h:inputTextarea value="#{editor.config}" style="width: 500px; height: 300px; font-family: monospace" />
                </h:panelGrid>
            </h:panelGrid>
        </h:panelGrid>
        
        <r:outputPanel id="output">
            Output: <h:outputText value="#{editor.value}" />
        </r:outputPanel>
    </h:form>


    <r:log mode="console"/>

</ui:define>
</ui:composition>
